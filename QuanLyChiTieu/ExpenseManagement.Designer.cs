//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
namespace QuanLyChiTieu
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class ExpenseManagementEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new ExpenseManagementEntities object using the connection string found in the 'ExpenseManagementEntities' section of the application configuration file.
        /// </summary>
        public ExpenseManagementEntities() : base("name=ExpenseManagementEntities", "ExpenseManagementEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new ExpenseManagementEntities object.
        /// </summary>
        public ExpenseManagementEntities(string connectionString) : base(connectionString, "ExpenseManagementEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new ExpenseManagementEntities object.
        /// </summary>
        public ExpenseManagementEntities(EntityConnection connection) : base(connection, "ExpenseManagementEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Money> Money
        {
            get
            {
                if ((_Money == null))
                {
                    _Money = base.CreateObjectSet<Money>("Money");
                }
                return _Money;
            }
        }
        private ObjectSet<Money> _Money;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MoneyForSavings> MoneyForSavings
        {
            get
            {
                if ((_MoneyForSavings == null))
                {
                    _MoneyForSavings = base.CreateObjectSet<MoneyForSavings>("MoneyForSavings");
                }
                return _MoneyForSavings;
            }
        }
        private ObjectSet<MoneyForSavings> _MoneyForSavings;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SpendMoney> SpendMoney
        {
            get
            {
                if ((_SpendMoney == null))
                {
                    _SpendMoney = base.CreateObjectSet<SpendMoney>("SpendMoney");
                }
                return _SpendMoney;
            }
        }
        private ObjectSet<SpendMoney> _SpendMoney;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Money EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMoney(Money money)
        {
            base.AddObject("Money", money);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MoneyForSavings EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMoneyForSavings(MoneyForSavings moneyForSavings)
        {
            base.AddObject("MoneyForSavings", moneyForSavings);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SpendMoney EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSpendMoney(SpendMoney spendMoney)
        {
            base.AddObject("SpendMoney", spendMoney);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ExpenseManagementModel", Name="Money")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Money : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Money object.
        /// </summary>
        /// <param name="money1">Initial value of the Money1 property.</param>
        /// <param name="month">Initial value of the Month property.</param>
        public static Money CreateMoney(global::System.Int32 money1, global::System.Int32 month)
        {
            Money money = new Money();
            money.Money1 = money1;
            money.Month = month;
            return money;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Money1
        {
            get
            {
                return _Money1;
            }
            set
            {
                OnMoney1Changing(value);
                ReportPropertyChanging("Money1");
                _Money1 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Money1");
                OnMoney1Changed();
            }
        }
        private global::System.Int32 _Money1;
        partial void OnMoney1Changing(global::System.Int32 value);
        partial void OnMoney1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Month
        {
            get
            {
                return _Month;
            }
            set
            {
                if (_Month != value)
                {
                    OnMonthChanging(value);
                    ReportPropertyChanging("Month");
                    _Month = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Month");
                    OnMonthChanged();
                }
            }
        }
        private global::System.Int32 _Month;
        partial void OnMonthChanging(global::System.Int32 value);
        partial void OnMonthChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ExpenseManagementModel", Name="MoneyForSavings")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MoneyForSavings : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MoneyForSavings object.
        /// </summary>
        /// <param name="iDSaving">Initial value of the IDSaving property.</param>
        /// <param name="moneyFSaving">Initial value of the MoneyFSaving property.</param>
        /// <param name="month">Initial value of the Month property.</param>
        public static MoneyForSavings CreateMoneyForSavings(global::System.DateTime iDSaving, global::System.Int32 moneyFSaving, global::System.Int32 month)
        {
            MoneyForSavings moneyForSavings = new MoneyForSavings();
            moneyForSavings.IDSaving = iDSaving;
            moneyForSavings.MoneyFSaving = moneyFSaving;
            moneyForSavings.Month = month;
            return moneyForSavings;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime IDSaving
        {
            get
            {
                return _IDSaving;
            }
            set
            {
                if (_IDSaving != value)
                {
                    OnIDSavingChanging(value);
                    ReportPropertyChanging("IDSaving");
                    _IDSaving = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("IDSaving");
                    OnIDSavingChanged();
                }
            }
        }
        private global::System.DateTime _IDSaving;
        partial void OnIDSavingChanging(global::System.DateTime value);
        partial void OnIDSavingChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MoneyFSaving
        {
            get
            {
                return _MoneyFSaving;
            }
            set
            {
                OnMoneyFSavingChanging(value);
                ReportPropertyChanging("MoneyFSaving");
                _MoneyFSaving = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MoneyFSaving");
                OnMoneyFSavingChanged();
            }
        }
        private global::System.Int32 _MoneyFSaving;
        partial void OnMoneyFSavingChanging(global::System.Int32 value);
        partial void OnMoneyFSavingChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Month
        {
            get
            {
                return _Month;
            }
            set
            {
                OnMonthChanging(value);
                ReportPropertyChanging("Month");
                _Month = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Month");
                OnMonthChanged();
            }
        }
        private global::System.Int32 _Month;
        partial void OnMonthChanging(global::System.Int32 value);
        partial void OnMonthChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ExpenseManagementModel", Name="SpendMoney")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SpendMoney : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SpendMoney object.
        /// </summary>
        /// <param name="iDExpense">Initial value of the IDExpense property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="date">Initial value of the Date property.</param>
        /// <param name="money">Initial value of the Money property.</param>
        public static SpendMoney CreateSpendMoney(global::System.DateTime iDExpense, global::System.String name, global::System.DateTime date, global::System.Int32 money)
        {
            SpendMoney spendMoney = new SpendMoney();
            spendMoney.IDExpense = iDExpense;
            spendMoney.Name = name;
            spendMoney.Date = date;
            spendMoney.Money = money;
            return spendMoney;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime IDExpense
        {
            get
            {
                return _IDExpense;
            }
            set
            {
                if (_IDExpense != value)
                {
                    OnIDExpenseChanging(value);
                    ReportPropertyChanging("IDExpense");
                    _IDExpense = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("IDExpense");
                    OnIDExpenseChanged();
                }
            }
        }
        private global::System.DateTime _IDExpense;
        partial void OnIDExpenseChanging(global::System.DateTime value);
        partial void OnIDExpenseChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private global::System.DateTime _Date;
        partial void OnDateChanging(global::System.DateTime value);
        partial void OnDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Money
        {
            get
            {
                return _Money;
            }
            set
            {
                OnMoneyChanging(value);
                ReportPropertyChanging("Money");
                _Money = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Money");
                OnMoneyChanged();
            }
        }
        private global::System.Int32 _Money;
        partial void OnMoneyChanging(global::System.Int32 value);
        partial void OnMoneyChanged();

        #endregion

    
    }

    #endregion

    
}
